<launch>
    <!-- ARUCO DETECT -->
    <arg name="camera" default="/bebop"/> <!-- namespace for camera input -->
    <arg name="image" default="image_raw"/>
    <arg name="transport" default="compressed"/>
    <arg name="fiducial_len" default="0.15"/> <!-- aruco marker size in m -->
    <arg name="dictionary" default="7"/> <!-- aruco dictionary, 7 = 5x5 1000 -->
    <arg name="do_pose_estimation" default="true"/> 
    <arg name="vis_msgs" default="false"/> <!-- If vis_msgs set to true, pose estimation will be published with ROS standard vision_msgs -->
    <arg name="ignore_fiducials" default="" /> <!-- arucos a ignorar -->
    <arg name="fiducial_len_override" default="" />
    <arg name="verbose" default="false"/>
    <node pkg="aruco_detect" name="aruco_detect"
        type="aruco_detect" output="log" respawn="false">
        <param name="image_transport" value="$(arg transport)"/>
        <!-- 
        <param name="adaptativeThresConstant" default="5"/>
        <param name="adaptativeThresWinSizeMax" default="70"/>
        <param name="adaptativeThresWinSizeMin" default="3"/>
        <param name="adaptativeThresWinSizeMax" default="8"/>
        <param name="cornerRefinementMaxIterations" default="100"/>
        <param name="cornerRefinementWinSize" default="8"/>
        <param name="cornerRefinementMInAccuracy" default="0.005"/>
        <param name="doCornerRefinement" default="True"/>
        <param name="errorCorrectionRate" default="0.5"/>
        <param name="minCornerDistanceRate" default="0.1"/>
        <param name="markerBorderBits" default="1"/>
        <param name="maxErroneousBitsInBorderRate" default="0.08"/>
        <param name="minDistanceToBorder" default="1"/>
        <param name="minMarkerDistanceRate" default="0.1"/>
        <param name="minMarkerPerimeterRate" default="0.05"/>
        <param name="maxMarkerPerimeterRate" default="6.0"/>
        <param name="minOtsuStdDev" default="10.0"/>
        <param name="perspectiveRemoveIgnoredMarginPerCell" default="0.1"/>
        <param name="perspectiveRemovePixelPerCell" default="8"/>
        <param name="polygonalApproxAccuracyRate" default="0.01"/>

        -->
        <param name="publish_images" value="true" />
        <param name="fiducial_len" value="$(arg fiducial_len)"/>
        <param name="dictionary" value="$(arg dictionary)"/>
        <param name="do_pose_estimation" value="$(arg do_pose_estimation)"/>
        <param name="vis_msgs" value="$(arg vis_msgs)"/>
        <param name="ignore_fiducials" value="$(arg ignore_fiducials)"/>
        <param name="fiducial_len_override" value="$(arg fiducial_len_override)"/>
        <param name="verbose" value="$(arg verbose)"/>
        <remap from="camera/compressed" to="$(arg camera)/$(arg image)/$(arg transport)"/>
        <remap from="camera_info" to="$(arg camera)/camera_info"/>
    </node>

    <!-- WINDOW DETECT 
    <node pkg="tmr24" type="window_detect.py" name="window_detect" output="log"/> -->

    <!-- CONE DETECT -->
    <node pkg="tmr24" type="cone_detect.py" name="cone_detect" output="log"/>

    <!-- LINE FOLLOWER -->
    <node pkg="tmr24" type="line_detect.py" name="line_detect" output="log"/>

    <!-- VELOCITY SENDER -->
    <node pkg="tmr24" type="vel_publisher.py" name="vel_publisher" output="log"/>

    <!-- STATE MACHINE -->
    <node pkg="tmr24" type="bebop_smach.py" name="state_machine" output="screen"/>

    <!-- ############################################################################## -->
    <!-- #           display nodes for every process suscribed to a camera            # -->
    <!-- ############################################################################## -->

    <!-- IMAGE VIEW ARUCOS -->
    <node pkg="image_view" type="image_view" name="image_view_arucos" output="screen">
        <remap from="image" to="/fiducial_images"/>
    </node>

    <!-- IMAGE VIEW WINDOW DETECT -->
    <node pkg="image_view" type="image_view" name="image_view_windows" output="screen">
        <remap from="image" to="/window_detect/detections"/>
    </node>

    <!-- IMAGE VIEW CONE -->
    <node pkg="image_view" type="image_view" name="image_view_cone" output="screen">
        <remap from="image" to="/cone_detect/detections"/>
    </node>

    <!-- IMAGE VIEW LINE DETECTOR -->
    <node pkg="image_view" type="image_view" name="image_view_line" output="screen">
        <remap from="image" to="/line_detect/detections"/>
    </node>

</launch>